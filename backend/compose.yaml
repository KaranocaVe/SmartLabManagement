# 使用 Docker Compose 文档格式版本 '3.8'
version: '3.8'

# 定义所有服务
services:
  # 定义一个名为 'mysql' 的服务
  # Spring Boot 会根据服务名 'mysql' 来查找并自动配置连接
  mysql:
    # 使用官方的 MySQL 8.0 镜像
    image: 'mysql:9.3.0'
    container_name: LabManagement_MySQL
    
    # 设置环境变量，用于初始化数据库
    # Spring Boot 会读取这些变量来自动配置 DataSource
    environment:
      - 'MYSQL_ROOT_PASSWORD=password'      # 设置 root 用户的密码
      - 'MYSQL_DATABASE=smart_lab_db'         # Spring Boot 将连接到这个数据库
      - 'MYSQL_USER=labUser'                 # Spring Boot 将使用这个用户名
      - 'MYSQL_PASSWORD=labPass'             # Spring Boot 将使用这个密码

    # 端口映射：将主机的 3306 端口映射到容器的 3306 端口
    # 这样你可以用本地的数据库客户端（如 DBeaver, DataGrip）连接到它
    ports:
      - '3306:3306'

    # 卷挂载：实现数据持久化
    volumes:
      # 将下面定义的具名卷 'mysql-dev-data' 挂载到容器内存储数据的标准路径
      - mysql-dev-data:/var/lib/mysql

# 定义顶层卷
volumes:
  # 声明一个具名卷，由 Docker 负责管理
  mysql-dev-data: